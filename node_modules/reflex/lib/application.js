"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.start = exports.beginner = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _task = require("./task");

var _signal = require("./signal");

var _effects = require("./effects");

var _dom = require("./dom");

var first = function first(xs) {
  return xs[0];
};
var second = function second(xs) {
  return xs[1];
};

var beginner = exports.beginner = function beginner(configuration) {
  return { flags: void 0,
    init: function init(_) {
      return [configuration.model, _effects.Effects.none];
    },
    update: function update(model, action) {
      return [configuration.update(model, action), _effects.Effects.none];
    },
    view: configuration.view
  };
};

var start = exports.start = function start(configuration) {
  var init = configuration.init;
  var view = configuration.view;
  var update = configuration.update;
  var flags = configuration.flags;

  var _mailbox = (0, _signal.mailbox)({});

  var address = _mailbox.address;
  var signal = _mailbox.signal;

  var step = function step(_ref, action) {
    var _ref2 = _slicedToArray(_ref, 2);

    var model = _ref2[0];
    var _ = _ref2[1];
    return update(model, action);
  };

  var display = function display(model) {
    return (0, _dom.root)(view, model, address);
  };

  var steps = (0, _signal.reductions)(step, init(flags), signal);

  var model = (0, _signal.map)(first, steps);
  var application = { address: address,
    model: model,
    task: (0, _signal.map)(second, steps),
    view: (0, _signal.map)(display, model)
  };

  return application;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHBsaWNhdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFPQSxJQUFNLFFBQXFCLFNBQXJCLEtBQXFCLENBQUMsRUFBRDtTQUF5QixHQUFHLENBQUg7Q0FBekI7QUFDM0IsSUFBTSxTQUFzQixTQUF0QixNQUFzQixDQUFDLEVBQUQ7U0FBeUIsR0FBRyxDQUFIO0NBQXpCOztBQUdyQixJQUFNLDhCQUNYLFNBRFcsUUFDWCxDQUFDLGFBQUQ7U0FDRSxFQUFFLE9BQU8sS0FBSyxDQUFMO0FBQ1AsVUFBTTthQUNOLENBQUUsY0FBYyxLQUFkLEVBQ0EsaUJBQVEsSUFBUjtLQUZJO0FBSU4sWUFBUSxnQkFBQyxLQUFELEVBQVEsTUFBUjthQUNSLENBQUUsY0FBYyxNQUFkLENBQXFCLEtBQXJCLEVBQTRCLE1BQTVCLENBQUYsRUFDRSxpQkFBUSxJQUFSO0tBRk07QUFJUixVQUFNLGNBQWMsSUFBZDs7Q0FWVjs7QUFjSyxJQUFNLHdCQUNYLFNBRFcsS0FDWCxDQUFDLGFBQUQsRUFBa0c7TUFDekYsT0FBNkIsY0FBN0IsS0FEeUY7TUFDbkYsT0FBdUIsY0FBdkIsS0FEbUY7TUFDN0UsU0FBaUIsY0FBakIsT0FENkU7TUFDckUsUUFBUyxjQUFULE1BRHFFOztpQkFRdEUscUJBQVMsRUFBVCxFQVJzRTs7TUFRekYsMkJBUnlGO01BUWhGLHlCQVJnRjs7QUFTaEcsTUFBTSxPQUNKLFNBREksSUFDSixPQUNFLE1BREY7OztRQUFHO1FBQU87V0FHVixPQUFPLEtBQVAsRUFBYyxNQUFkO0dBSEEsQ0FWOEY7O0FBZWhHLE1BQU0sVUFDSixTQURJLE9BQ0osQ0FBQyxLQUFEO1dBQ0EsZUFBSyxJQUFMLEVBQVcsS0FBWCxFQUFrQixPQUFsQjtHQURBLENBaEI4Rjs7QUFtQmhHLE1BQU0sUUFDSix3QkFBVyxJQUFYLEVBQWlCLEtBQUssS0FBTCxDQUFqQixFQUE4QixNQUE5QixDQURJLENBbkIwRjs7QUFzQmhHLE1BQU0sUUFBUSxpQkFBSSxLQUFKLEVBQVcsS0FBWCxDQUFSLENBdEIwRjtBQXVCaEcsTUFBTSxjQUNKLEVBQUUsZ0JBQUY7QUFDRSxnQkFERjtBQUVFLFVBQU0saUJBQUksTUFBSixFQUFZLEtBQVosQ0FBTjtBQUNBLFVBQU0saUJBQUksT0FBSixFQUFhLEtBQWIsQ0FBTjtHQUpFLENBdkIwRjs7QUE4QmhHLFNBQU8sV0FBUCxDQTlCZ0c7Q0FBbEciLCJmaWxlIjoiYXBwbGljYXRpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBAZmxvdyAqL1xuXG5pbXBvcnQge1Rhc2t9IGZyb20gXCIuL3Rhc2tcIlxuaW1wb3J0IHttYWlsYm94LCBtYXAsIHJlZHVjdGlvbnN9IGZyb20gXCIuL3NpZ25hbFwiXG5pbXBvcnQge0VmZmVjdHN9IGZyb20gXCIuL2VmZmVjdHNcIlxuaW1wb3J0IHtyb290fSBmcm9tIFwiLi9kb21cIlxuXG4vKjo6XG5pbXBvcnQgdHlwZSB7TWFpbGJveCwgU2lnbmFsfSBmcm9tIFwiLi9zaWduYWxcIlxuaW1wb3J0IHR5cGUge0JlZ2lubmVyQ29uZmlndXJhdGlvbiwgQWR2YW5jZWRDb25maWd1cmF0aW9uLCBBcHBsaWNhdGlvbn0gZnJvbSBcIi4vYXBwbGljYXRpb25cIlxuKi9cblxuY29uc3QgZmlyc3QgPSAvKjo6PGEsIGI+Ki8gKHhzLyo6W2EsIGJdKi8pLyo6YSovID0+IHhzWzBdXG5jb25zdCBzZWNvbmQgPSAvKjo6PGEsIGI+Ki8gKHhzLyo6W2EsIGJdKi8pLyo6YiovID0+IHhzWzFdXG5cblxuZXhwb3J0IGNvbnN0IGJlZ2lubmVyID0gLyo6Ojxtb2RlbCwgYWN0aW9uPiovXG4gIChjb25maWd1cmF0aW9uLyo6QmVnaW5uZXJDb25maWd1cmF0aW9uPG1vZGVsLCBhY3Rpb24+Ki8pLyo6QWR2YW5jZWRDb25maWd1cmF0aW9uPG1vZGVsLCBhY3Rpb24sIHZvaWQ+Ki8gPT5cbiAgKCB7IGZsYWdzOiB2b2lkKDApXG4gICAgLCBpbml0OiBfID0+XG4gICAgICBbIGNvbmZpZ3VyYXRpb24ubW9kZWxcbiAgICAgICwgRWZmZWN0cy5ub25lXG4gICAgICBdXG4gICAgLCB1cGRhdGU6IChtb2RlbCwgYWN0aW9uKSA9PlxuICAgICAgWyBjb25maWd1cmF0aW9uLnVwZGF0ZShtb2RlbCwgYWN0aW9uKVxuICAgICAgLCBFZmZlY3RzLm5vbmVcbiAgICAgIF1cbiAgICAsIHZpZXc6IGNvbmZpZ3VyYXRpb24udmlld1xuICAgIH1cbiAgKVxuXG5leHBvcnQgY29uc3Qgc3RhcnQgPSAvKjo6PG1vZGVsLCBhY3Rpb24sIGZsYWdzPiovXG4gIChjb25maWd1cmF0aW9uLyo6QWR2YW5jZWRDb25maWd1cmF0aW9uPG1vZGVsLCBhY3Rpb24sIGZsYWdzPiovKS8qOkFwcGxpY2F0aW9uPG1vZGVsLCBhY3Rpb24+Ki8gPT4ge1xuICAgIGNvbnN0IHtpbml0LCB2aWV3LCB1cGRhdGUsIGZsYWdzfSA9IGNvbmZpZ3VyYXRpb25cbiAgICAvLyBXZSBkb24ndCBoYXZlIGEgdmFsdWUgb2YgYGFjdGlvbmAgdHlwZSB0aGVyZSBmb3Igd2UgY2FuIG5vdFxuICAgIC8vIGNyZWF0ZSBhIGBNYWlsYm94PGFjdGlvbj5gLiBFbG0gd29ya3MgYXJvdW5kIHRoYXQgYnkgZGVmaW5pbmdcbiAgICAvLyBNYWlsYm94PEFycmF5PGFjdGlvbj4+IGFuZCBzdGFydHMgd2l0aCBgW11gLCBidXQgYm94aW5nIGV2ZXJ5IGFjdGlvblxuICAgIC8vIGlzIGhhcmQgdG8ganVzdGlmeSBqdXN0IHRvIG1ha2UgdHlwZSBzeXN0ZW0gaGFwcHkuIFNvIGluc3RlYWQgd2UganVzdFxuICAgIC8vIHN0YXJ0IHdpdGggYG51bGxgLlxuICAgIC8vIEBGbG93SWdub3JlOlxuICAgIGNvbnN0IHthZGRyZXNzLCBzaWduYWx9ID0gbWFpbGJveCgoe30vKjphY3Rpb24qLykpXG4gICAgY29uc3Qgc3RlcCA9XG4gICAgICAoIFttb2RlbCwgX11cbiAgICAgICwgYWN0aW9uXG4gICAgICApID0+XG4gICAgICB1cGRhdGUobW9kZWwsIGFjdGlvbilcblxuICAgIGNvbnN0IGRpc3BsYXkgPVxuICAgICAgKG1vZGVsKSA9PlxuICAgICAgcm9vdCh2aWV3LCBtb2RlbCwgYWRkcmVzcylcblxuICAgIGNvbnN0IHN0ZXBzID1cbiAgICAgIHJlZHVjdGlvbnMoc3RlcCwgaW5pdChmbGFncyksIHNpZ25hbClcblxuICAgIGNvbnN0IG1vZGVsID0gbWFwKGZpcnN0LCBzdGVwcylcbiAgICBjb25zdCBhcHBsaWNhdGlvbiA9XG4gICAgICB7IGFkZHJlc3NcbiAgICAgICwgbW9kZWxcbiAgICAgICwgdGFzazogbWFwKHNlY29uZCwgc3RlcHMpXG4gICAgICAsIHZpZXc6IG1hcChkaXNwbGF5LCBtb2RlbClcbiAgICAgIH1cblxuICAgIHJldHVybiBhcHBsaWNhdGlvblxuICB9XG4iXX0=